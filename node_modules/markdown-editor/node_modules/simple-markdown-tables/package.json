{
  "name": "simple-markdown-tables",
  "version": "0.1.6",
  "main": "simple_tables.js",
  "author": {
    "name": "Cornerstone Systems",
    "email": "support@cornerstonenw.com"
  },
  "description": "Converts simple, column-aligned tables into markdown table format (with a helper function to convert tab-delimited tables into column-aligned tables)",
  "contributors": [
    {
      "name": "Peter Rust",
      "email": "peter@cornerstonenw.com"
    }
  ],
  "repository": {
    "type": "git",
    "url": "https://github.com/CSNW/simple-markdown-tables.git"
  },
  "keywords": [
    "markdown",
    "table",
    "tab-delimited",
    "TSV",
    "tab-separated"
  ],
  "dependencies": {
    "underscore": "1.4.x",
    "underscore.string": "2.3.x"
  },
  "devDependencies": {
    "mocha": "1.8.x"
  },
  "license": "MIT",
  "engines": {
    "node": ">=0.6"
  },
  "readme": "# Simple Markdown Tables\n\nThe de-facto markdown table format (supported by [PHP Markdown Extra][php], [RedCarpet][redcarpet] / [Github Flavored Markdown][gfm], [MultiMarkdown][mmd] and others) requires use of the pipe character (`|`) to delimit columns and a row of pipe-delimited dashes (`--- | ---`) to separate the header row from other rows. While this is an unambiguous format that opens the door for features like right-aligned columns, it has to be learned, it requires the use of the pipe character (unfamiliar to many end-users) and it is a few steps removed from the tab-delimited format commonly pasted from other applications.\n\n[php]: http://michelf.ca/projects/php-markdown/extra/\n[redcarpet]: https://github.com/vmg/redcarpet\n[gfm]: https://help.github.com/articles/github-flavored-markdown\n[mmd]: https://github.com/fletcher/MultiMarkdown/\n\n**Simple Markdown Tables** is a markdown pre-processor that converts simple, column-aligned tables into markdown table format. It also provides a helper function that converts tab-delimited tables into column-aligned tables.\n\n\n## Column-Aligned Tables\n\n`simpleTables()`, when passed a string containing column-aligned tables like this:\n\n```\nFirst Name\tLast Name\tRole\nJack\t\tSparrow\t\tPirate\nLuke\t\tSkywalker\tJedi\n```\n\nwill return the tables in markdown table format (with the first row as the header):\n\n```\n| First Name      | Last Name       | Role   |\n| --------------- | --------------- | ------ |\n| Jack            | Sparrow         | Pirate |\n| Luke            | Skywalker       | Jedi   |\n```\n\nColumn-alignment can be done with tabs or spaces, but tabs are recommended because they make it easier to maintain column alignment. Tabs are interpreted as filling out the spacing to the nearest 8 characters, as is their behavior in a `<textarea>` and in most plain text editors (though some code editors may need to be configured to display a tab width of 8 spaces and to not replace tabs with spaces).\n\n**Each column in the first (header) row must be separated by at least 2 spaces** (or 1 tab that expands to more than 1 space). This requirement helps prevent adjacent lines that happen to have spaces that line up from being misinterpreted as tables. So this:\n\n```\nThis is a test.\nThis is another test.\n```\n\nwill not be converted to a markdown table:\n\n```\nThis is a test.\nThis is another test.\n```\n\n## Tab-Delimited Tables\n\nThe helper function `simpleTables.alignColumns()` converts tab-delimited tables that are not column-aligned (such as that pasted from browsers and Word/Excel) into column-aligned tables, converting this:\n\n```\nFirst Name\tLast Name\tRole\nJack\tSparrow\tPirate\nLuke\tSkywalker\tJedi\n```\n\ninto this:\n\n```\nFirst Name\tLast Name\tRole\nJack\t\tSparrow\t\tPirate\nLuke\t\tSkywalker\tJedi\n```\n\nAt this time, `alignColumns()` handles empty cells as well so:\n\n```\nFirst Name\tLast Name\tRole\nJack\t\tPirate\nLuke\tSkywalker\tJedi\n```\n\nWill be converted to:\n\n```\nFirst Name\tLast Name\tRole\nJack\t\t\t\tPirate\nLuke\t\tSkywalker\tJedi\n```\n\n## Usage\n\n`simpleTables()` can be chained with the [marked](https://github.com/chjj/marked) parser/compiler like this: `var html = marked(simpleTables(content))`. `alignColumns()` can be added to a `<textarea>`'s paste event like this:\n\n```\n$('textarea').on('paste', function(evt) {\n  setTimeout(function() {\n    evt.target.value = simpleTables.alignColumns(evt.target.value);\n  }, 0);\n});\n```\n\n(The `setTimeout()` is necessary because the pasted content is not injected into the textarea until after the paste event.)",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/CSNW/simple-markdown-tables/issues"
  },
  "homepage": "https://github.com/CSNW/simple-markdown-tables",
  "_id": "simple-markdown-tables@0.1.6",
  "dist": {
    "shasum": "5efdff5b974e6c5862e6b4eb0da6ef2acb586451"
  },
  "_resolved": "git+https://github.com/CSNW/simple-markdown-tables.git#b29a13bbc8ae171de4ba84338a5c76b843719f9e",
  "_from": "simple-markdown-tables@git+https://github.com/CSNW/simple-markdown-tables.git"
}
